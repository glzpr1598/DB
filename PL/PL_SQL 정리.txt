/***************************************************
PL/SQL 블록 구조
***************************************************/

-- 익명 블록(Anonymous block)
[DECLARE
    선언문;]
BEGIN
    실행문;
END;
/

-- 프로시저(Procedure)
PROCEDURE 프로시저명[(매개변수 ...)]
IS
    선언문;
BEGIN
    실행문;
END;
/

-- 함수(Function)
FUNCTION 함수명[(매개변수 ...)]
RETURN 데이터타입
IS
    선언문;
BEGIN
    실행문;
    RETURN 변수;
END;
/


/***************************************************
프로시저
***************************************************/

-- 프로시저 생성
CREATE OR REPLACE 프로시저명[(매개변수명 {IN | OUT | IN OUT} 데이터타입 ...)]
IS
    선언문;
BEGIN
    실행문;
END;
/

-- 프로시저 실행
EXECUTE 프로시저명

-- 프로시저 조회
SELECT * FROM USER_OBJECTS WHERE OBJECT_TYPE = 'PROCEDURE';

-- 프로시저 삭제
DROP PROCEDURE 프로시저명;


/***************************************************
변수
***************************************************/

-- 일반 변수
변수명 [CONSTANT] 데이터타입 [NOT NULL] [:= 값 또는 표현식];

-- 스칼라 변수(%TYPE) : 컬럼의 데이터타입을 모르는 경우
변수명 테이블명.컬럼명%TYPE

-- ROWTYPE 변수 : 테이블이나 뷰의 컬럼과 데이터타입을 그대로 가져옴
변수명 테이블명%ROWTYPE;


/***************************************************
제어문(IF)
***************************************************/

IF 조건 THEN
    실행문;
[ELSIF 조건 THEN
    실행문;]
...
[ELSE THEN
    실행문;]
END IF;


/***************************************************
반복문(LOOP)
***************************************************/

-- LOOP
LOOP
    실행문;
    EXIT WHEN 조건
END LOOP;

-- WHILE LOOP
WHILE 조건 LOOP
    실행문;
END LOOP;

-- FOR LOOP
FOR 변수 IN {초기값..최종값 | 커서 | SELECT문}
LOOP
    실행문;
END LOOP;


/***************************************************
트리거
***************************************************/

-- 트리거 생성
CREATE [OR REPLACE] TRIGGER 트리거명
{BEFORE | AFTER}
{INSERT | UPDATE | DELETE} ON 테이블명
[FOR EACH ROW]
PL/SQL 블록;
-- FOR EACH ROW : 행 트리거, 기본값은 문장 트리거

-- 트리거 조회
SELECT * FROM USER_TRIGGERS;

-- 트리거 삭제
DROP TRIGGER 트리거명;